/eff_joint_traj_controller/action_monitor_rate: 10
/eff_joint_traj_controller/constraints/elbow_joint/goal: 0.1
/eff_joint_traj_controller/constraints/elbow_joint/trajectory: 0.1
/eff_joint_traj_controller/constraints/goal_time: 0.6
/eff_joint_traj_controller/constraints/shoulder_lift_joint/goal: 0.1
/eff_joint_traj_controller/constraints/shoulder_lift_joint/trajectory: 0.1
/eff_joint_traj_controller/constraints/shoulder_pan_joint/goal: 0.1
/eff_joint_traj_controller/constraints/shoulder_pan_joint/trajectory: 0.1
/eff_joint_traj_controller/constraints/stopped_velocity_tolerance: 0.05
/eff_joint_traj_controller/constraints/wrist_1_joint/goal: 0.1
/eff_joint_traj_controller/constraints/wrist_1_joint/trajectory: 0.1
/eff_joint_traj_controller/constraints/wrist_2_joint/goal: 0.1
/eff_joint_traj_controller/constraints/wrist_2_joint/trajectory: 0.1
/eff_joint_traj_controller/constraints/wrist_3_joint/goal: 0.1
/eff_joint_traj_controller/constraints/wrist_3_joint/trajectory: 0.1
/eff_joint_traj_controller/gains/elbow_joint/d: 20
/eff_joint_traj_controller/gains/elbow_joint/i: 1
/eff_joint_traj_controller/gains/elbow_joint/i_clamp: 1
/eff_joint_traj_controller/gains/elbow_joint/p: 2000
/eff_joint_traj_controller/gains/shoulder_lift_joint/d: 200
/eff_joint_traj_controller/gains/shoulder_lift_joint/i: 1
/eff_joint_traj_controller/gains/shoulder_lift_joint/i_clamp: 1
/eff_joint_traj_controller/gains/shoulder_lift_joint/p: 10000
/eff_joint_traj_controller/gains/shoulder_pan_joint/d: 200
/eff_joint_traj_controller/gains/shoulder_pan_joint/i: 1
/eff_joint_traj_controller/gains/shoulder_pan_joint/i_clamp: 1
/eff_joint_traj_controller/gains/shoulder_pan_joint/p: 4000
/eff_joint_traj_controller/gains/wrist_1_joint/d: 1
/eff_joint_traj_controller/gains/wrist_1_joint/i: 1
/eff_joint_traj_controller/gains/wrist_1_joint/i_clamp: 1
/eff_joint_traj_controller/gains/wrist_1_joint/p: 500
/eff_joint_traj_controller/gains/wrist_2_joint/d: 1
/eff_joint_traj_controller/gains/wrist_2_joint/i: 1
/eff_joint_traj_controller/gains/wrist_2_joint/i_clamp: 1
/eff_joint_traj_controller/gains/wrist_2_joint/p: 500
/eff_joint_traj_controller/gains/wrist_3_joint/d: 0.1
/eff_joint_traj_controller/gains/wrist_3_joint/i: 0
/eff_joint_traj_controller/gains/wrist_3_joint/i_clamp: 1
/eff_joint_traj_controller/gains/wrist_3_joint/p: 10
/eff_joint_traj_controller/joints: &id001
- shoulder_pan_joint
- shoulder_lift_joint
- elbow_joint
- wrist_1_joint
- wrist_2_joint
- wrist_3_joint
/eff_joint_traj_controller/state_publish_rate: 125
/eff_joint_traj_controller/stop_trajectory_duration: 0.5
/eff_joint_traj_controller/type: effort_controllers/JointTrajectoryController
/gazebo/enable_ros_network: true
/joint_group_eff_controller/joints: *id001
/joint_group_eff_controller/type: effort_controllers/JointGroupEffortController
/joint_state_controller/publish_rate: 125
/joint_state_controller/type: joint_state_controller/JointStateController
/robot_description: "<?xml version=\"1.0\" ?>\n<!-- ===================================================================================\
  \ -->\n<!-- |    This document was autogenerated by xacro from /home/maros_b/ros_workspace/src/impakt-robot/ur_gazebo/inc/urdf/ur.xacro\
  \ | -->\n<!-- |    EDITING THIS FILE BY HAND IS NOT RECOMMENDED                \
  \                 | -->\n<!-- ===================================================================================\
  \ -->\n<robot name=\"ur5_robot\">\n  <!--\n    This is a top-level xacro instantiating\
  \ the Gazebo-specific version of the\n    'ur_robot' macro (ie: 'ur_robot_gazebo')\
  \ and passing it values for all its\n    required arguments.\n\n    This file should\
  \ be considered the Gazebo-specific variant of the file\n    with the same name\
  \ in the ur_description package. It accepts the same\n    arguments, but instead\
  \ of configuring everything for a real robot, will\n    generate a Gazebo-compatible\
  \ URDF with a ros_control hardware_interface\n    attached to it.\n\n    Only use\
  \ this top-level xacro if you plan on spawning the robot in Gazebo\n    'by itself',\
  \ without any gripper or any other geometry attached.\n\n    If you need to attach\
  \ an end-effector, camera or need to integrate the\n    robot into a larger workcell\
  \ and want to spawn that as a single entity in\n    Gazebo, DO NOT EDIT THIS FILE.\n\
  \n    Instead: create a new top-level xacro, give it a proper name, include the\n\
  \    required '.xacro' files, instantiate the models (ie: call the macros) and\n\
  \    connect everything by adding the appropriate joints.\n  -->\n  <!--\n    Main\
  \ xacro macro definition of the \"Gazebo robot\" model.\n\n    This wraps the model\
  \ of the real robot and adds all elements and parameters\n    required by Gazebo.\n\
  \n    It also adds the gazebo_ros_control plugin.\n\n    NOTE: this is NOT a URDF.\
  \ It cannot directly be loaded by consumers\n    expecting a flattened '.urdf' file.\
  \ See the top-level '.xacro' for that\n    (but note: that .xacro must still be\
  \ processed by the xacro command).\n\n    For use in '.launch' files: use one of\
  \ the 'load_urX.launch' convenience\n    launch files.\n\n    NOTE: this Gazebo\
  \ model makes use of the same set of parameter files as the\n    main xacro macro\
  \ (in ur_description). It is therefor possible to use the\n    kinematic calibration\
  \ exported from a REAL UR robot. Please refer to the\n    ur_macro.xacro in ur_description\
  \ for more information about this.\n\n    Main author of the migration to yaml configs:\
  \ Ludovic Delval.\n\n    Contributors to previous versions (in no particular order):\n\
  \n     - Felix Messmer\n     - Kelsey Hawkins\n     - Shaun Edwards\n     - Alexander\
  \ Bubeck\n     - Nadia Hammoudeh Garcia\n     - G. vd. Hoorn\n     - Dave Niewinski\n\
  \     - Andy Zelenak\n     - Miguel Prada\n     - Mathias Luedtke\n     - Hans-Joachim\
  \ Krauch\n     - Felix Exner\n  -->\n  <!--\n    Base UR robot series xacro macro.\n\
  \n    NOTE: this is NOT a URDF. It cannot directly be loaded by consumers\n    expecting\
  \ a flattened '.urdf' file. See the top-level '.xacro' for that\n    (but note:\
  \ that .xacro must still be processed by the xacro command).\n\n    For use in '.launch'\
  \ files: use one of the 'load_urX.launch' convenience\n    launch files.\n\n   \
  \ This file models the base kinematic chain of a UR robot, which then gets\n   \
  \ parameterised by various configuration files to convert it into a UR3(e),\n  \
  \  UR5(e), UR10(e) or UR16e.\n\n    NOTE: the default kinematic parameters (ie:\
  \ link lengths, frame locations,\n    offets, etc) do not correspond to any particular\
  \ robot. They are defaults\n    only. There WILL be non-zero offsets between the\
  \ Forward Kinematics results\n    in TF (ie: robot_state_publisher) and the values\
  \ reported by the Teach\n    Pendant.\n\n    For accurate (and robot-specific) transforms,\
  \ the 'kinematics_parameters_file'\n    parameter MUST point to a .yaml file containing\
  \ the appropriate values for\n    the targetted robot.\n\n    If using the UniversalRobots/Universal_Robots_ROS_Driver,\
  \ follow the steps\n    described in the readme of that repository to extract the\
  \ kinematic\n    calibration from the controller and generate the required .yaml\
  \ file.\n\n    Main author of the migration to yaml configs: Ludovic Delval.\n\n\
  \    Contributors to previous versions (in no particular order):\n\n     - Felix\
  \ Messmer\n     - Kelsey Hawkins\n     - Wim Meeussen\n     - Shaun Edwards\n  \
  \   - Nadia Hammoudeh Garcia\n     - Dave Hershberger\n     - G. vd. Hoorn\n   \
  \  - Philip Long\n     - Dave Coleman\n     - Miguel Prada\n     - Mathias Luedtke\n\
  \     - Marcel Schnirring\n     - Felix von Drigalski\n     - Felix Exner\n    \
  \ - Jimmy Da Silva\n     - Ajit Krisshna N L\n     - Muhammad Asif Rana\n  -->\n\
  \  <!--\n    NOTE: the macro defined in this file is NOT part of the public API\
  \ of this\n          package. Users CANNOT rely on this file being available, or\
  \ stored in\n          this location. Nor can they rely on the existence of the\
  \ macro.\n  -->\n  <transmission name=\"shoulder_pan_trans\">\n    <type>transmission_interface/SimpleTransmission</type>\n\
  \    <joint name=\"shoulder_pan_joint\">\n      <hardwareInterface>hardware_interface/EffortJointInterface</hardwareInterface>\n\
  \    </joint>\n    <actuator name=\"shoulder_pan_motor\">\n      <mechanicalReduction>1</mechanicalReduction>\n\
  \    </actuator>\n  </transmission>\n  <transmission name=\"shoulder_lift_trans\"\
  >\n    <type>transmission_interface/SimpleTransmission</type>\n    <joint name=\"\
  shoulder_lift_joint\">\n      <hardwareInterface>hardware_interface/EffortJointInterface</hardwareInterface>\n\
  \    </joint>\n    <actuator name=\"shoulder_lift_motor\">\n      <mechanicalReduction>1</mechanicalReduction>\n\
  \    </actuator>\n  </transmission>\n  <transmission name=\"elbow_trans\">\n   \
  \ <type>transmission_interface/SimpleTransmission</type>\n    <joint name=\"elbow_joint\"\
  >\n      <hardwareInterface>hardware_interface/EffortJointInterface</hardwareInterface>\n\
  \    </joint>\n    <actuator name=\"elbow_motor\">\n      <mechanicalReduction>1</mechanicalReduction>\n\
  \    </actuator>\n  </transmission>\n  <transmission name=\"wrist_1_trans\">\n \
  \   <type>transmission_interface/SimpleTransmission</type>\n    <joint name=\"wrist_1_joint\"\
  >\n      <hardwareInterface>hardware_interface/EffortJointInterface</hardwareInterface>\n\
  \    </joint>\n    <actuator name=\"wrist_1_motor\">\n      <mechanicalReduction>1</mechanicalReduction>\n\
  \    </actuator>\n  </transmission>\n  <transmission name=\"wrist_2_trans\">\n \
  \   <type>transmission_interface/SimpleTransmission</type>\n    <joint name=\"wrist_2_joint\"\
  >\n      <hardwareInterface>hardware_interface/EffortJointInterface</hardwareInterface>\n\
  \    </joint>\n    <actuator name=\"wrist_2_motor\">\n      <mechanicalReduction>1</mechanicalReduction>\n\
  \    </actuator>\n  </transmission>\n  <transmission name=\"wrist_3_trans\">\n \
  \   <type>transmission_interface/SimpleTransmission</type>\n    <joint name=\"wrist_3_joint\"\
  >\n      <hardwareInterface>hardware_interface/EffortJointInterface</hardwareInterface>\n\
  \    </joint>\n    <actuator name=\"wrist_3_motor\">\n      <mechanicalReduction>1</mechanicalReduction>\n\
  \    </actuator>\n  </transmission>\n  <!-- links: main serial chain -->\n  <link\
  \ name=\"base_link\"/>\n  <link name=\"base_link_inertia\">\n    <visual>\n    \
  \  <origin rpy=\"0 0 3.141592653589793\" xyz=\"0 0 0\"/>\n      <geometry>\n   \
  \     <mesh filename=\"package://ur_description/meshes/ur5/visual/base.dae\"/>\n\
  \      </geometry>\n      <material name=\"LightGrey\">\n        <color rgba=\"\
  0.7 0.7 0.7 1.0\"/>\n      </material>\n    </visual>\n    <collision>\n      <origin\
  \ rpy=\"0 0 3.141592653589793\" xyz=\"0 0 0\"/>\n      <geometry>\n        <mesh\
  \ filename=\"package://ur_description/meshes/ur5/collision/base.stl\"/>\n      </geometry>\n\
  \    </collision>\n    <inertial>\n      <mass value=\"4.0\"/>\n      <origin rpy=\"\
  0 0 0\" xyz=\"0 0 0\"/>\n      <inertia ixx=\"0.00443333156\" ixy=\"0.0\" ixz=\"\
  0.0\" iyy=\"0.00443333156\" iyz=\"0.0\" izz=\"0.0072\"/>\n    </inertial>\n  </link>\n\
  \  <link name=\"shoulder_link\">\n    <visual>\n      <origin rpy=\"0 0 3.141592653589793\"\
  \ xyz=\"0 0 0\"/>\n      <geometry>\n        <mesh filename=\"package://ur_description/meshes/ur5/visual/shoulder.dae\"\
  />\n      </geometry>\n      <material name=\"LightGrey\">\n        <color rgba=\"\
  0.7 0.7 0.7 1.0\"/>\n      </material>\n    </visual>\n    <collision>\n      <origin\
  \ rpy=\"0 0 3.141592653589793\" xyz=\"0 0 0\"/>\n      <geometry>\n        <mesh\
  \ filename=\"package://ur_description/meshes/ur5/collision/shoulder.stl\"/>\n  \
  \    </geometry>\n    </collision>\n    <inertial>\n      <mass value=\"3.7\"/>\n\
  \      <origin rpy=\"0 0 0\" xyz=\"0 0 0\"/>\n      <inertia ixx=\"0.014972352344389999\"\
  \ ixy=\"0.0\" ixz=\"0.0\" iyy=\"0.014972352344389999\" iyz=\"0.0\" izz=\"0.01040625\"\
  />\n    </inertial>\n  </link>\n  <link name=\"upper_arm_link\">\n    <visual>\n\
  \      <origin rpy=\"1.5707963267948966 0 -1.5707963267948966\" xyz=\"0 0 0.13585\"\
  />\n      <geometry>\n        <mesh filename=\"package://ur_description/meshes/ur5/visual/upperarm.dae\"\
  />\n      </geometry>\n      <material name=\"LightGrey\">\n        <color rgba=\"\
  0.7 0.7 0.7 1.0\"/>\n      </material>\n    </visual>\n    <collision>\n      <origin\
  \ rpy=\"1.5707963267948966 0 -1.5707963267948966\" xyz=\"0 0 0.13585\"/>\n     \
  \ <geometry>\n        <mesh filename=\"package://ur_description/meshes/ur5/collision/upperarm.stl\"\
  />\n      </geometry>\n    </collision>\n    <inertial>\n      <mass value=\"8.393\"\
  />\n      <origin rpy=\"0 1.5707963267948966 0\" xyz=\"-0.2125 0.0 0.136\"/>\n \
  \     <inertia ixx=\"0.1338857818623325\" ixy=\"0.0\" ixz=\"0.0\" iyy=\"0.1338857818623325\"\
  \ iyz=\"0.0\" izz=\"0.0151074\"/>\n    </inertial>\n  </link>\n  <link name=\"forearm_link\"\
  >\n    <visual>\n      <origin rpy=\"1.5707963267948966 0 -1.5707963267948966\"\
  \ xyz=\"0 0 0.0165\"/>\n      <geometry>\n        <mesh filename=\"package://ur_description/meshes/ur5/visual/forearm.dae\"\
  />\n      </geometry>\n      <material name=\"LightGrey\">\n        <color rgba=\"\
  0.7 0.7 0.7 1.0\"/>\n      </material>\n    </visual>\n    <collision>\n      <origin\
  \ rpy=\"1.5707963267948966 0 -1.5707963267948966\" xyz=\"0 0 0.0165\"/>\n      <geometry>\n\
  \        <mesh filename=\"package://ur_description/meshes/ur5/collision/forearm.stl\"\
  />\n      </geometry>\n    </collision>\n    <inertial>\n      <mass value=\"2.275\"\
  />\n      <origin rpy=\"0 1.5707963267948966 0\" xyz=\"-0.196125 0.0 0.0165\"/>\n\
  \      <inertia ixx=\"0.03121679102890359\" ixy=\"0.0\" ixz=\"0.0\" iyy=\"0.03121679102890359\"\
  \ iyz=\"0.0\" izz=\"0.004095\"/>\n    </inertial>\n  </link>\n  <link name=\"wrist_1_link\"\
  >\n    <visual>\n      <!-- TODO: Move this to a parameter -->\n      <origin rpy=\"\
  1.5707963267948966 0 0\" xyz=\"0 0 -0.093\"/>\n      <geometry>\n        <mesh filename=\"\
  package://ur_description/meshes/ur5/visual/wrist1.dae\"/>\n      </geometry>\n \
  \     <material name=\"LightGrey\">\n        <color rgba=\"0.7 0.7 0.7 1.0\"/>\n\
  \      </material>\n    </visual>\n    <collision>\n      <origin rpy=\"1.5707963267948966\
  \ 0 0\" xyz=\"0 0 -0.093\"/>\n      <geometry>\n        <mesh filename=\"package://ur_description/meshes/ur5/collision/wrist1.stl\"\
  />\n      </geometry>\n    </collision>\n    <inertial>\n      <mass value=\"1.219\"\
  />\n      <origin rpy=\"0 0 0\" xyz=\"0 0 0\"/>\n      <inertia ixx=\"0.0020138887777775\"\
  \ ixy=\"0.0\" ixz=\"0.0\" iyy=\"0.0020138887777775\" iyz=\"0.0\" izz=\"0.0021942\"\
  />\n    </inertial>\n  </link>\n  <link name=\"wrist_2_link\">\n    <visual>\n \
  \     <origin rpy=\"0 0 0\" xyz=\"0 0 -0.095\"/>\n      <geometry>\n        <mesh\
  \ filename=\"package://ur_description/meshes/ur5/visual/wrist2.dae\"/>\n      </geometry>\n\
  \      <material name=\"LightGrey\">\n        <color rgba=\"0.7 0.7 0.7 1.0\"/>\n\
  \      </material>\n    </visual>\n    <collision>\n      <origin rpy=\"0 0 0\"\
  \ xyz=\"0 0 -0.095\"/>\n      <geometry>\n        <mesh filename=\"package://ur_description/meshes/ur5/collision/wrist2.stl\"\
  />\n      </geometry>\n    </collision>\n    <inertial>\n      <mass value=\"1.219\"\
  />\n      <origin rpy=\"0 0 0\" xyz=\"0 0 0\"/>\n      <inertia ixx=\"0.0018310388509175\"\
  \ ixy=\"0.0\" ixz=\"0.0\" iyy=\"0.0018310388509175\" iyz=\"0.0\" izz=\"0.0021942\"\
  />\n    </inertial>\n  </link>\n  <link name=\"wrist_3_link\">\n    <visual>\n \
  \     <origin rpy=\"1.5707963267948966 0 0\" xyz=\"0 0 -0.0818\"/>\n      <geometry>\n\
  \        <mesh filename=\"package://ur_description/meshes/ur5/visual/wrist3.dae\"\
  />\n      </geometry>\n      <material name=\"LightGrey\">\n        <color rgba=\"\
  0.7 0.7 0.7 1.0\"/>\n      </material>\n    </visual>\n    <collision>\n      <origin\
  \ rpy=\"1.5707963267948966 0 0\" xyz=\"0 0 -0.0818\"/>\n      <geometry>\n     \
  \   <mesh filename=\"package://ur_description/meshes/ur5/collision/wrist3.stl\"\
  />\n      </geometry>\n    </collision>\n    <inertial>\n      <mass value=\"0.1879\"\
  />\n      <origin rpy=\"0 0 0\" xyz=\"0.0 0.0 -0.01525\"/>\n      <inertia ixx=\"\
  8.062472608343e-05\" ixy=\"0.0\" ixz=\"0.0\" iyy=\"8.062472608343e-05\" iyz=\"0.0\"\
  \ izz=\"0.0001321171875\"/>\n    </inertial>\n  </link>\n  <!-- joints: main serial\
  \ chain -->\n  <joint name=\"base_link-base_link_inertia\" type=\"fixed\">\n   \
  \ <parent link=\"base_link\"/>\n    <child link=\"base_link_inertia\"/>\n    <!--\
  \ 'base_link' is REP-103 aligned (so X+ forward), while the internal\n         \
  \  frames of the robot/controller have X+ pointing backwards.\n           Use the\
  \ joint between 'base_link' and 'base_link_inertia' (a dummy\n           link/frame)\
  \ to introduce the necessary rotation over Z (of pi rad).\n      -->\n    <origin\
  \ rpy=\"0 0 3.141592653589793\" xyz=\"0 0 0\"/>\n  </joint>\n  <joint name=\"shoulder_pan_joint\"\
  \ type=\"revolute\">\n    <parent link=\"base_link_inertia\"/>\n    <child link=\"\
  shoulder_link\"/>\n    <origin rpy=\"0 0 0\" xyz=\"0 0 0.089159\"/>\n    <axis xyz=\"\
  0 0 1\"/>\n    <limit effort=\"150.0\" lower=\"-6.283185307179586\" upper=\"6.283185307179586\"\
  \ velocity=\"3.141592653589793\"/>\n    <dynamics damping=\"0\" friction=\"0\"/>\n\
  \  </joint>\n  <joint name=\"shoulder_lift_joint\" type=\"revolute\">\n    <parent\
  \ link=\"shoulder_link\"/>\n    <child link=\"upper_arm_link\"/>\n    <origin rpy=\"\
  1.570796327 0 0\" xyz=\"0 0 0\"/>\n    <axis xyz=\"0 0 1\"/>\n    <limit effort=\"\
  150.0\" lower=\"-6.283185307179586\" upper=\"6.283185307179586\" velocity=\"3.141592653589793\"\
  />\n    <dynamics damping=\"0\" friction=\"0\"/>\n  </joint>\n  <joint name=\"elbow_joint\"\
  \ type=\"revolute\">\n    <parent link=\"upper_arm_link\"/>\n    <child link=\"\
  forearm_link\"/>\n    <origin rpy=\"0 0 0\" xyz=\"-0.425 0 0\"/>\n    <axis xyz=\"\
  0 0 1\"/>\n    <limit effort=\"150.0\" lower=\"-3.141592653589793\" upper=\"3.141592653589793\"\
  \ velocity=\"3.141592653589793\"/>\n    <dynamics damping=\"0\" friction=\"0\"/>\n\
  \  </joint>\n  <joint name=\"wrist_1_joint\" type=\"revolute\">\n    <parent link=\"\
  forearm_link\"/>\n    <child link=\"wrist_1_link\"/>\n    <origin rpy=\"0 0 0\"\
  \ xyz=\"-0.39225 0 0.10915\"/>\n    <axis xyz=\"0 0 1\"/>\n    <limit effort=\"\
  28.0\" lower=\"-6.283185307179586\" upper=\"6.283185307179586\" velocity=\"3.141592653589793\"\
  />\n    <dynamics damping=\"0\" friction=\"0\"/>\n  </joint>\n  <joint name=\"wrist_2_joint\"\
  \ type=\"revolute\">\n    <parent link=\"wrist_1_link\"/>\n    <child link=\"wrist_2_link\"\
  />\n    <origin rpy=\"1.570796327 0 0\" xyz=\"0 -0.09465 -1.941303950897609e-11\"\
  />\n    <axis xyz=\"0 0 1\"/>\n    <limit effort=\"28.0\" lower=\"-6.283185307179586\"\
  \ upper=\"6.283185307179586\" velocity=\"3.141592653589793\"/>\n    <dynamics damping=\"\
  0\" friction=\"0\"/>\n  </joint>\n  <joint name=\"wrist_3_joint\" type=\"revolute\"\
  >\n    <parent link=\"wrist_2_link\"/>\n    <child link=\"wrist_3_link\"/>\n   \
  \ <origin rpy=\"1.570796326589793 3.141592653589793 3.141592653589793\" xyz=\"0\
  \ 0.0823 -1.688001216681175e-11\"/>\n    <axis xyz=\"0 0 1\"/>\n    <limit effort=\"\
  28.0\" lower=\"-6.283185307179586\" upper=\"6.283185307179586\" velocity=\"3.141592653589793\"\
  />\n    <dynamics damping=\"0\" friction=\"0\"/>\n  </joint>\n  <!-- ROS-Industrial\
  \ 'base' frame: base_link to UR 'Base' Coordinates transform -->\n  <link name=\"\
  base\"/>\n  <joint name=\"base_link-base_fixed_joint\" type=\"fixed\">\n    <!--\
  \ Note the rotation over Z of pi radians: as base_link is REP-103\n           aligned\
  \ (ie: has X+ forward, Y+ left and Z+ up), this is needed\n           to correctly\
  \ align 'base' with the 'Base' coordinate system of\n           the UR controller.\n\
  \      -->\n    <origin rpy=\"0 0 3.141592653589793\" xyz=\"0 0 0\"/>\n    <parent\
  \ link=\"base_link\"/>\n    <child link=\"base\"/>\n  </joint>\n  <!-- ROS-Industrial\
  \ 'flange' frame: attachment point for EEF models -->\n  <link name=\"flange\"/>\n\
  \  <joint name=\"wrist_3-flange\" type=\"fixed\">\n    <parent link=\"wrist_3_link\"\
  />\n    <child link=\"flange\"/>\n    <origin rpy=\"0 -1.5707963267948966 -1.5707963267948966\"\
  \ xyz=\"0 0 0\"/>\n  </joint>\n  <!-- ROS-Industrial 'tool0' frame: all-zeros tool\
  \ frame -->\n  <link name=\"tool0\"/>\n  <joint name=\"flange-tool0\" type=\"fixed\"\
  >\n    <!-- default toolframe: X+ left, Y+ up, Z+ front -->\n    <origin rpy=\"\
  1.5707963267948966 0 1.5707963267948966\" xyz=\"0 0 0\"/>\n    <parent link=\"flange\"\
  />\n    <child link=\"tool0\"/>\n  </joint>\n  <!-- Configure self collision properties\
  \ per link -->\n  <gazebo reference=\"shoulder_link\">\n    <selfCollide>true</selfCollide>\n\
  \  </gazebo>\n  <gazebo reference=\"upper_arm_link\">\n    <selfCollide>true</selfCollide>\n\
  \  </gazebo>\n  <gazebo reference=\"forearm_link\">\n    <selfCollide>true</selfCollide>\n\
  \  </gazebo>\n  <gazebo reference=\"wrist_1_link\">\n    <selfCollide>true</selfCollide>\n\
  \  </gazebo>\n  <gazebo reference=\"wrist_3_link\">\n    <selfCollide>true</selfCollide>\n\
  \  </gazebo>\n  <gazebo reference=\"wrist_2_link\">\n    <selfCollide>true</selfCollide>\n\
  \  </gazebo>\n  <gazebo reference=\"ee_link\">\n    <selfCollide>true</selfCollide>\n\
  \  </gazebo>\n  <!--\n      Inject Gazebo ROS Control plugin, which allows us to\
  \ use ros_control\n      controllers to control the virtual robot hw.\n    -->\n\
  \  <gazebo>\n    <plugin filename=\"libgazebo_ros_control.so\" name=\"ros_control\"\
  >\n      <!--robotNamespace>/</robotNamespace-->\n      <!--robotSimType>gazebo_ros_control/DefaultRobotHWSim</robotSimType-->\n\
  \    </plugin>\n  </gazebo>\n  <!--\n    Attach the Gazebo model to Gazebo's world\
  \ frame.\n\n    Note: if you're looking to integrate a UR into a larger scene and\
  \ need\n    to add EEFs or other parts, DO NOT change this file or the 'world' link\n\
  \    here. Create a NEW xacro instead and decide whether you need to add\n    a\
  \ 'world' link there.\n  -->\n  <link name=\"world\"/>\n  <joint name=\"world_joint\"\
  \ type=\"fixed\">\n    <parent link=\"world\"/>\n    <child link=\"base_link\"/>\n\
  \    <origin rpy=\"0 0 0\" xyz=\"0 0 0\"/>\n  </joint>\n  <link name=\"tool0_controller\"\
  />\n  <joint name=\"tool_controller_fake_joint\" type=\"fixed\">\n    <parent link=\"\
  tool0\"/>\n    <child link=\"tool0_controller\"/>\n    <origin rpy=\"0 0 0\" xyz=\"\
  0 0 0\"/>\n  </joint>\n</robot>\n\n"
/robot_state_publisher/publish_frequency: 125.0
/robot_state_publisher/tf_prefix: ''
/use_sim_time: true

